{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","view","onSelectSlot","selectable","onView","components","PrivateRoute","isLoggedIn","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d5280c2.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint,data,method = 'GET')=>{\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    if(method === 'GET'){\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url,{\r\n            method,\r\n            headers: {\r\n                'Content-type':'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchConToken = (endpoint,data,method = 'GET')=>{\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if(method === 'GET'){\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url,{\r\n            method,\r\n            headers: {\r\n                'Content-type':'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}\r\n\r\n\r\n","export const types = {\r\n    uiOpenModal:'[ui] Open Modal',\r\n    uiCloseModal:'[ui] Close Modal',\r\n    \r\n    eventStartAddNew:'[event] Start add new',\r\n    eventAddNew:'[event] Add new',\r\n    eventSetActive:'[event] Set Active',\r\n    eventLogout:'[event] Logout event',\r\n\r\n    eventClearActiveEvent:'[event] Clear active event',\r\n    eventUpdated:'[event] Event updated',\r\n    eventDeleted:'[event] Event deleted',\r\n\r\n    eventLoaded:'[event] Events Loaded',\r\n    \r\n    authCheckingFinish:'[auth] Finish checing login state',\r\n    authStartLogin:'[auth] Start login',\r\n    authLogin:'[auth] Login',\r\n    authStartRegister:'[auth] Start Register',\r\n    authStartTokenRenew:'[auth] Start token renew',\r\n    authLogout:'[auth] Logout'\r\n\r\n\r\n    \r\n}","import moment from 'moment';\r\n\r\n\r\nexport const prepareEvents = (events=[])=>{\r\n    \r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end:moment(e.end).toDate(),\r\n            start:moment(e.start).toDate()\r\n        })\r\n    )\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async(dispatch,getState) =>{\r\n        \r\n        const {uid,name} = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events',event,'POST');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id:uid,\r\n                    name:name\r\n                }\r\n                dispatch(eventAddNew(event));\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n\r\n        \r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type:types.eventAddNew,\r\n    payload:event\r\n});\r\n\r\nexport const eventLogout = () => ({type:types.eventLogout});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type:types.eventSetActive,\r\n    payload:event\r\n});\r\n\r\nexport const eventClearActiveEvent = () =>({\r\n    type:types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdate = (event)=>{\r\n    return async (dispatch)=>{\r\n        try {\r\n            \r\n            const resp = await fetchConToken(`events/${event.id}`,event,'PUT');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventUpdated(event));\r\n            } else {\r\n                Swal.fire('Error',body.msg,'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst eventUpdated = (event) =>({\r\n    type:types.eventUpdated,\r\n    payload:event\r\n});\r\n\r\n\r\nexport const eventStartDelete = ()=>{\r\n    return async (dispatch,getState)=>{\r\n\r\n        const {id} = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken(`events/${id}`,{},'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                Swal.fire('Error',body.msg,'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventDeleted = () => ({type:types.eventDeleted});\r\n\r\nexport const eventStartLoading = () =>{\r\n    return async (dispatch) =>{\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents(body.eventos);\r\n            //console.log(events);\r\n\r\n            dispatch(eventLoaded(events));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) =>({\r\n    type:types.eventLoaded,\r\n    payload:events\r\n});\r\n\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = (email,password)=>{\r\n    return async(dispatch)=>{\r\n        const resp = await fetchSinToken('auth',{email,password},'POST');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token',body.token);\r\n            localStorage.setItem('token-init-date',new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid:body.uid,\r\n                name:body.name\r\n            }));\r\n\r\n        } else {\r\n            Swal.fire('Error',body.msg,'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (email,password,name) => {\r\n    return async(dispatch)=>{\r\n        const resp = await fetchSinToken('auth/new',{email,password,name},'POST');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token',body.token);\r\n            localStorage.setItem('token-init-date',new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid:body.uid,\r\n                name:body.name\r\n            }));\r\n\r\n        } else {\r\n            Swal.fire('Error',body.msg,'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () =>{\r\n    return async(dispatch) =>{\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        \r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token',body.token);\r\n            localStorage.setItem('token-init-date',new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid:body.uid,\r\n                name:body.name\r\n            }));\r\n\r\n        } else {\r\n            \r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = ()=>({ type:types.authCheckingFinish });\r\n\r\nconst login = (user) => ({\r\n    type:types.authLogin,\r\n    payload:user\r\n});\r\n\r\nexport const startLogout  = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout = ()=>({ type:types.authLogout });","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport './login.css';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const LoginScreen = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    const [formLoginValues,handleLoginInputChange] = useForm({\r\n        lEmail:'montse@gmail.com',\r\n        lPassword:'admin123'\r\n    });\r\n\r\n    const [formRegisterValues,handleRegisterInputChange] = useForm({\r\n        rName:'Antonio',\r\n        rEmail:'antonio@gmail.com',\r\n        rPassword1:'123456',\r\n        rPassword2:'123456'\r\n    });\r\n\r\n    const {lEmail,lPassword} = formLoginValues;\r\n    const {rName, rEmail,rPassword1,rPassword2} = formRegisterValues;\r\n    \r\n\r\n    const handleLogin = (e) =>{\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail,lPassword));\r\n    }\r\n\r\n    const handleRegister = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if(rPassword1 !== rPassword2){\r\n            return Swal.fire('Error','Los password debe de ser iguales','error');\r\n        }\r\n\r\n        dispatch(startRegister(rEmail,rPassword1,rName));\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const {name} = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleLogout}\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};\r\n\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    \r\n    const { title, user } = event;\r\n\r\n\r\n    return (\r\n        <div>\r\n            <strong>{ title }</strong>\r\n            <span>{ user.name }</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () =>({\r\n    type:types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n    type:types.uiCloseModal\r\n});\r\n","import React, { useState, useEffect }  from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n  };\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\r\nconst nowPlus1 = now.clone().add(1,'hours');\r\n\r\nconst initEvent = {\r\n    title:'',\r\n    notes:'',\r\n    start:now.toDate(),\r\n    end:nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n    \r\n    \r\n    const dispatch = useDispatch();\r\n    const {modalOpen} = useSelector(state => state.ui);\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const { title,notes,start,end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if(activeEvent){\r\n            setFormValues(activeEvent)\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }       \r\n    }, [activeEvent,setFormValues]);\r\n\r\n\r\n    const handleInputChange = ({target}) =>{\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]:target.value\r\n        });\r\n    }\r\n\r\n    const closeModal = () =>{\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start:e\r\n        });\r\n    }\r\n    \r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end:e\r\n        });\r\n    }\r\n\r\n    const handleSubmitForm = (e) =>{\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio','error');\r\n        }\r\n\r\n        if(title.trim().length < 2){\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        //TODO: Realizar registro en base de datos\r\n        if(activeEvent){\r\n            dispatch(eventStartUpdate(formValues));\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n        \r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n\r\n    }\r\n    \r\n    return (\r\n        <Modal\r\n          isOpen={modalOpen}\r\n        //   onAfterOpen={afterOpenModal}\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          closeTimeoutMS={200}\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> { (activeEvent)? 'Editar evento' : 'Nuevo evento' } </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        className=\"form-control\"\r\n                        minDate={dateStart}\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    const handleClickNew = ()=>{\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    \r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClickNew}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () =>{\r\n        dispatch(eventStartDelete());\r\n    }\r\n    \r\n    return (\r\n\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Navbar } from '../ui/Navbar';\r\n\r\nimport {Calendar,momentLocalizer} from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\n\r\nimport { messages } from '../../helpers/calendar-messages';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n// const events = [{\r\n//     title:'Cumpleanos del jefe',\r\n//     start: moment().toDate(),\r\n//     end:moment().add(2,'hours').toDate(),\r\n//     bgcolor:'#fafafa',\r\n//     notes:'Comprar el pastel',\r\n//     user: {\r\n//         _id:'123',\r\n//         name:'Ernesto'\r\n//     }\r\n// }];\r\n\r\nexport const CalendarScreen = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const {events,activeEvent} = useSelector(state => state.calendar)\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n    const {uid} = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch]);\r\n\r\n    const onDoubleClick = (e) =>{\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n        \r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView',e);\r\n    }\r\n\r\n    const onSelectSlot = (e) =>{\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const eventStyleGetter = (event,start,end,isSelected) =>{\r\n        \r\n        \r\n        \r\n        const style = {\r\n            backgroundColor:(uid === event.user._id)? '#367CF7':'#465660',\r\n            borderRadius:'0px',\r\n            opacity:0.8,\r\n            display:'block',\r\n            color:'white'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                view={lastView}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                onView={onViewChange}\r\n                components={{\r\n                    event:CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n            \r\n            {\r\n                activeEvent &&\r\n                (\r\n                    <DeleteEventFab />\r\n                )\r\n            }\r\n            \r\n           \r\n            \r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isLoggedIn,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (isLoggedIn) ?\r\n                    <Component {...props} /> :\r\n                    <Redirect to='/login' />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isLoggedIn:PropTypes.bool.isRequired,\r\n    component:PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isLoggedIn,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (isLoggedIn) ?\r\n                     <Redirect to='/' />:\r\n                     <Component {...props} />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isLoggedIn:PropTypes.bool.isRequired,\r\n    component:PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const {checking,uid} = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch]);\r\n    \r\n    if(checking){\r\n        return <h5>Espere...</h5>;\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact \r\n                        path='/login' \r\n                        component={LoginScreen}\r\n                        isLoggedIn={!!uid} \r\n                    />\r\n                    <PrivateRoute \r\n                        exact \r\n                        path='/' \r\n                        component={CalendarScreen}\r\n                        isLoggedIn={!!uid} \r\n                    />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen:false\r\n}\r\n\r\nexport const uiReducer = (state=initialState,action)=>{\r\n    switch(action.type){\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen:true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen:false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\n// {\r\n//     id:'klkljl',\r\n//     title:'Cumpleanos del jefe',\r\n//     start: moment().toDate(),\r\n//     end:moment().add(2,'hours').toDate(),\r\n//     notes:'Comprar el pastel',\r\n//     user: {\r\n//         _id:'123',\r\n//         name:'Ernesto'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events:[],\r\n    activeEvent:null\r\n}\r\n\r\n\r\nexport const calendarReducer = (state=initialState,action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent:action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent:null\r\n            }\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events:state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent:null\r\n            }\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events:[...action.payload]\r\n            }\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking:true,\r\n    uid:null,\r\n    name:null\r\n}\r\n\r\nexport const authReducer = (state = initialState,action)=>{\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking:false,\r\n                ...action.payload\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking:false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking:false\r\n            }        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport { uiReducer } from \"./uiReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { authReducer } from \"./authReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui:uiReducer,\r\n    calendar:calendarReducer,\r\n    auth:authReducer\r\n})","import { createStore,compose, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import React from 'react';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport {Provider} from 'react-redux'\r\nimport { store } from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CalendarApp } from './CalendarApp';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n    <CalendarApp />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}